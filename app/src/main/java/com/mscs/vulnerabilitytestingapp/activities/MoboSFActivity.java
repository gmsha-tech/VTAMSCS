package com.mscs.vulnerabilitytestingapp.activities;

import androidx.appcompat.app.AppCompatActivity;

import android.app.ProgressDialog;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

import com.androidnetworking.AndroidNetworking;
import com.androidnetworking.common.Priority;
import com.androidnetworking.error.ANError;
import com.androidnetworking.interfaces.JSONObjectRequestListener;
import com.androidnetworking.interfaces.UploadProgressListener;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.mscs.vulnerabilitytestingapp.Constants;
import com.mscs.vulnerabilitytestingapp.R;
import com.mscs.vulnerabilitytestingapp.helperclasses.AppListAdapter;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.File;

public class MoboSFActivity extends AppCompatActivity {

    TextView textView;
    int percentage = 0;
    ProgressDialog dialog;

    TextView appName, hashText, analyzerText, uploadStatus, appType, appTitle;
    MaterialButton scanBtn;
    JSONObject responseJson;
    MaterialCardView cardView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_mobo_sfactivity);

        dialog = new ProgressDialog(this);
        dialog.setCancelable(false);
        dialog.setTitle("Uploading..");
        dialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
        dialog.create();
        dialog.setMax(100);
        dialog.show();

        appName = findViewById(R.id.appnametextview);
        hashText = findViewById(R.id.hashTextView);
        analyzerText = findViewById(R.id.analyzertextview);
        uploadStatus = findViewById(R.id.statustextview);
        appType = findViewById(R.id.apptypetextview);
        scanBtn = findViewById(R.id.scanAppBtn);
        cardView = findViewById(R.id.textsLayout);
        appTitle = findViewById(R.id.apptitle);

        scanBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        try {
                            AndroidNetworking.post(Constants.HOST_IP + Constants.SCAN)
                                    .addBodyParameter("scan_type", responseJson.getString("scan_type"))
                                    .addBodyParameter("file_name", responseJson.getString("file_name"))
                                    .addBodyParameter("hash", responseJson.getString("hash"))
                                    .addHeaders(Constants.AUTH_STRING, Constants.MOBSF_AUTHORIZATION)
                                    .setPriority(Priority.HIGH)
                                    .build().getAsJSONObject(new JSONObjectRequestListener() {
                                        @Override
                                        public void onResponse(JSONObject response) {
                                            Log.e("Scan", "Scan Response: " + response);
                                        }

                                        @Override
                                        public void onError(ANError anError) {
                                            Log.e("Scan", "Scan Response: " + anError.getErrorDetail());
                                        }
                                    });
                        } catch (JSONException e) {
                            throw new RuntimeException(e);
                        }
                    }
                });
            }
        });

        File file;
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
            file = new File(String.valueOf(AppListAdapter.apkPath.toFile()));
        } else {
            file = new File(String.valueOf(AppListAdapter.apkPath));
        }
        AndroidNetworking.initialize(this);
        AndroidNetworking.upload(Constants.HOST_IP + Constants.UPLOAD)
                .addMultipartFile("file", file, "application/octet-stream")
                .addHeaders(Constants.AUTH_STRING, Constants.MOBSF_AUTHORIZATION)
                .setPriority(Priority.HIGH)
                .build()
                .setUploadProgressListener(new UploadProgressListener() {
                    @Override
                    public void onProgress(long bytesUploaded, long totalBytes) {
                        // do anything with progress
                        percentage = (int) (bytesUploaded * 100 / totalBytes);
                        dialog.setProgress(percentage);
                    }
                })
                .getAsJSONObject(new JSONObjectRequestListener() {
                    @Override
                    public void onResponse(JSONObject response) {
                        // do anything with response
                        Log.e("fileupload", "onResponse: " + response);
                        responseJson = response;
                        try {
                            setText(response);

                        } catch (JSONException exception) {
                            Log.e("TextError", "onResponse: " + exception.getMessage());
                            finish();
                        }
                        dialog.dismiss();

                    }

                    @Override
                    public void onError(ANError error) {
                        // handle error
                        Toast.makeText(MoboSFActivity.this, "Error " + error.getErrorDetail(), Toast.LENGTH_SHORT).show();
                        Log.e("fileupload", "onError: " + error.getErrorDetail());
                        dialog.dismiss();
                        finish();
                    }
                });
    }

    void setText(JSONObject response) throws JSONException {
        appName.setText("App Name: "+response.getString("file_name"));
        appTitle.setText(response.getString("file_name"));
        analyzerText.setText("Analyzer Type: " + response.getString("analyzer"));
        uploadStatus.setText("Upload Status: " +response.getString("status"));
        hashText.setText("Hash: " +response.getString("hash"));
        appType.setText("App Type: " +response.getString("scan_type"));
        scanBtn.setEnabled(true);
        cardView.setVisibility(View.VISIBLE);

    }

    public void backPressed(View view) {
        super.onBackPressed();
    }
}